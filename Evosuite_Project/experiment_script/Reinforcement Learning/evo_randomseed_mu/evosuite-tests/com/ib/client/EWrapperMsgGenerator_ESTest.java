/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 14 12:08:09 GMT 2023
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static shaded.org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.UnderComp;
import java.util.Vector;
import org.junit.runner.RunWith;
import shaded.org.evosuite.runtime.EvoRunner;
import shaded.org.evosuite.runtime.EvoRunnerParameters;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, (String) null, 0.0, "FA:", (String) null, 0, "", "FA:", "", (String) null, "", (String) null, (String) null, "");
      String string0 = EWrapperMsgGenerator.scannerData(0, (-891), contractDetails0, (String) null, "", " localSymbol=", "=,2Sxab`vh]3#nyE!O");
      assertEquals("id = 0 rank=-891 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark= projection= localSymbol= legsStr==,2Sxab`vh]3#nyE!O", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar(1015, (-1L), 1.7976931348623157E308, (-1L), 1015, 0.0, 0L, (-2906.7035106628), 0);
      assertEquals("id=1015 time = -1 open=1.7976931348623157E308 high=-1.0 low=1015.0 close=0.0 volume=0 count=0 WAP=-2906.7035106628", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData((-2250), (String) null, 0.0, (-3567.0), (-2250), (-1.0), (-2250), (-2250), 931, true);
      assertEquals("id=-2250 date = null open=0.0 high=-3567.0 low=-2250.0 close=-1.0 volume=-2250 count=-2250 WAP=931.0 hasGaps=true", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData(2, (String) null, 2447.0, 1582, 1582, 1.7976931348623157E308, 6354, 1582, 1.7976931348623157E308, true);
      assertEquals("id=2 date = null open=2447.0 high=1582.0 low=1582.0 close=1.7976931348623157E308 volume=6354 count=1582 WAP=1.7976931348623157E308 hasGaps=true", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2((-3328), (-1381), "}\"/9q", 0, (-1093), (-1093), (-1093));
      assertEquals("updateMktDepth: -3328 -1381 }\"/9q 0 -1093 -1093.0 -1093", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth((-928), 0, (-1047), 0, 490.678578815955, 1);
      assertEquals("updateMktDepth: -928 0 -1047 0 490.678578815955 1", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(0, 0, 121, 1, 0, 0);
      assertEquals("updateMktDepth: 0 0 121 1 0.0 0", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, 467, 1368.08303, 1635.6581348647, 13, 0.0, 1015L, "id=13 time = 1015 open=13.0 high=1015.0 low=13.0 close=-1270.6098 volume=1015 count=109 WAP=1193.27607787571");
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n467 1368.08303 1635.6581348647 13.0 0.0 1015.0 id=13 time = 1015 open=13.0 high=1015.0 low=13.0 close=-1270.6098 volume=1015 count=109 WAP=1193.27607787571", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue("nfLlSiOX", "", (String) null, (String) null);
      assertEquals("updateAccountValue: nfLlSiOX  null null", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue("}^Z=hkwZr0/c'0e+Xe", "fp9$q5*518D7<", ",2\"VwoR4@Vi", "fp9$q5*518D7<");
      assertEquals("updateAccountValue: }^Z=hkwZr0/c'0e+Xe fp9$q5*518D7< ,2\"VwoR4@Vi fp9$q5*518D7<", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(964, (String) null, 0, 1882, 1285.0, (-1177), 10, 0.0, 2, "");
      assertEquals("order status: orderId=964 clientId=2 permId=-1177 status=null filled=0 remaining=1882 avgFillPrice=1285.0 lastFillPrice=0.0 parent Id=10 whyHeld=", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP(0, 1, 338.197208, "updateMktDepth: 0 0 121 1 0.0 0", 1, 0, "id=110 =============== end ===============", 0.0, 892.389);
      assertEquals("id=0  bidPrice: basisPoints = 338.197208/updateMktDepth: 0 0 121 1 0.0 0 impliedFuture = 1.0 holdDays = 0 futureExpiry = id=110 =============== end =============== dividendImpact = 0.0 dividends to expiry = 892.389", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 1692.6009708874126, 1.0, 13);
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = 1.0: pvDividend = 13.0", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(305, 13, 1, 0, 0, 0);
      assertEquals("id=305  modelOptComp: vol = 1.0 delta = 0.0: modelPrice = 0.0: pvDividend = 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-366), 13, (-2230.576574136797), (-276.910568267), (-2413.006), (-2230.576574136797));
      assertEquals("id=-366  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 448.54, 1.0, 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=13  modelOptComp: vol = 448.54 delta = 1.0: modelPrice = N/A: pvDividend = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice(98, (-1666), 63, 928);
      assertEquals("id=98  unknown=63.0  canAutoExecute", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.fundamentalData((-3328), "");
      assertEquals("id  = -3328 len = 0\n", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Contract contract0 = new Contract();
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.execDetails(51, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 51\norderId = 0\nclientId = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\ncontractExchange = null\ncurrency = null\nlocalSymbol = null\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      String string0 = EWrapperMsgGenerator.deltaNeutralValidation(809, underComp0);
      assertEquals("id = 809 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(0, "^pOHqm*XF%!B*3U8Ay", (String) null, "^pOHqm*XF%!B*3U8Ay", (-1.0), "", (String) null, "-x", "-x", "", vector0, "", false, "=}", (String) null);
      String string0 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 0\nsymbol = ^pOHqm*XF%!B*3U8Ay\nsecType = null\nexpiry = ^pOHqm*XF%!B*3U8Ay\nstrike = -1.0\nright = \nmultiplier = null\nexchange = -x\nprimaryExch = \ncurrency = -x\nlocalSymbol = \n", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Order order0 = new Order();
      Contract contract0 = new Contract();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(0, contract0, order0, (OrderState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractDetails(1545, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails((-1610612734), (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractMsg((Contract) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      order0.m_algoParams = contract0.m_comboLegs;
      OrderState orderState0 = new OrderState();
      order0.m_algoStrategy = "O";
      String string0 = EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(1, "n2(oes = ", "BAG", "OptionAskExchStr", 1.0, " scalePriceIncrement=", "n2(oes = ", "1<'QS@`I", "n2(oes = ", "Ea/p3CZMeU|WBu^[Rs", vector0, "w{e-Pk@)S", false, "w{e-Pk@)S", "1<'QS@`I");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_algoStrategy = "~ol)H:X/qz0b[F";
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(1, "n(oes = ", "BAG", " warningText=", 1.0, " scalePriceIncrement=", "~F;g'L<qWjYb{;o", "1<'QS@`I", "~F;g'L<qWjYb{;o", "MZs/noBd:sU-:Xfk", vector0, "w{e-Pk@)S", false, "w{e-Pk@)S", "1<'QS@`I");
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      contract0.m_secType = "BAG";
      order0.m_basisPoints = (double) 0;
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(1, "n2(oes = ", "BAG", "OptionAskExchStr", 1.0, " scalePriceIncrement=", "n2(oes = ", "1<'QS@`I", "n2(oes = ", "Ea/p3CZMeU|WBu^[Rs", vector0, "w{e-Pk@)S", false, "w{e-Pk@)S", "1<'QS@`I");
      contract0.m_comboLegsDescrip = "gIi<e'g$/Uf;_";
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(Integer.MAX_VALUE, Integer.MAX_VALUE, 1.7976931348623157E308, 0, 1.7976931348623157E308, 0.0);
      assertEquals("id=2147483647  unknown: vol = N/A delta = 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(593, 363, 0.0, Integer.MAX_VALUE, (-452.78195), 0.0);
      assertEquals("id=593  unknown: vol = 0.0 delta = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-11), (-11), (-11), (-11), (-11), (-11));
      assertEquals("id=-11  unknown: vol = N/A delta = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice(0, (-1047), 0, (-1047));
      assertEquals("id=0  unknown=0.0  canAutoExecute", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice('m', Integer.MAX_VALUE, 'b', 0);
      assertEquals("id=109  unknown=98.0  noAutoExecute", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickString('f', Integer.MAX_VALUE, "");
      assertEquals("id=102  unknown=", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation(2075, (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(2146823898, 1, (String) null, "OptionAskExchStr");
      assertEquals("MsgId=2146823898 :: MsgType=1 :: Origin=OptionAskExchStr :: Message=null", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, (-3889), (-3889), (-3889), (-3889), (-3889), (-3889), "kLsq4|*nuox_JK6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.receiveFA(13, "id=13  modelOptComp: vol = 448.54 delta = 1.0: modelPrice = N/A: pvDividend = N/A");
      assertEquals("FA: null id=13  modelOptComp: vol = 448.54 delta = 1.0: modelPrice = N/A: pvDividend = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.contractDetailsEnd((-2146446587));
      assertEquals("reqId = -2146446587 =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSnapshotEnd(2);
      assertEquals("id=2 =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerDataEnd((-1707));
      assertEquals("id = -1707 =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickGeneric(493, 10, (-2413.006));
      assertEquals("id=493  bidOptComp=-2413.006", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.managedAccounts(" =============== end ===============");
      assertEquals("Connected : The list of managed accounts are : [ =============== end ===============]", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      assertEquals(" =============== end ===============", eWrapperMsgGenerator0.openOrderEnd());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.contractDetails(1073741824, contractDetails0);
      assertEquals("reqId = 1073741824 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = null\ntimeZoneId = null\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.accountDownloadEnd("");
      assertEquals("accountDownloadEnd: ", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(1, Integer.MAX_VALUE, (String) null, 'y', 'f', 1.7976931348623157E308, Integer.MAX_VALUE);
      assertEquals("updateMktDepth: 1 2147483647 null 121 102 1.7976931348623157E308 2147483647", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.bondContractDetails(2271, contractDetails0);
      assertEquals("reqId = 2271 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = null\nconid = 0\nminTick = 0.0\norderTypes = null\nvalidExchanges = null\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = null\n ---- Bond Contract Details End ----\n", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.scannerData(1194, 1194, (ContractDetails) null, " =============== end ===============", " =============== end ===============", " =============== end ===============", " =============== end ===============");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.nextValidId(3686);
      assertEquals("Next Valid Order ID: 3686", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.execDetailsEnd(293);
      assertEquals("reqId = 293 =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.currentTime(1115L);
      assertEquals("current time = 1115 (Jan 1, 1970 12:18:35 AM)", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.openOrderEnd();
      assertEquals(" =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP(Integer.MAX_VALUE, '?', 0, (String) null, 0, 1, (String) null, 3, 'c');
      assertEquals("id=2147483647  unknown: basisPoints = 0.0/null impliedFuture = 0.0 holdDays = 1 futureExpiry = null dividendImpact = 3.0 dividends to expiry = 99.0", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Execution execution0 = new Execution();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.execDetails(992, (Contract) null, execution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSize(2145452585, 13, 0);
      assertEquals("id=2145452585  modelOptComp=0", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerParameters((String) null);
      assertEquals("SCANNER PARAMETERS:\nnull", string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountTime((String) null);
      assertEquals("updateAccountTime: null", string0);
  }
}
