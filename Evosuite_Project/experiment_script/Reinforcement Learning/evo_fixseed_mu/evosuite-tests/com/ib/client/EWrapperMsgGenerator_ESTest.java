/*
 * This file was automatically generated by EvoSuite
 * Mon Sep 18 13:31:12 GMT 2023
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static shaded.org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.Vector;
import org.junit.runner.RunWith;
import shaded.org.evosuite.runtime.EvoRunner;
import shaded.org.evosuite.runtime.EvoRunnerParameters;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(2677, "G4Jq)7/:FcE]", "G4Jq)7/:FcE]", "G4Jq)7/:FcE]", (-713), ",Eu#Qwb%3N.^q", "G4Jq)7/:FcE]", "$q2kGV:c", "G4Jq)7/:FcE]", "", vector0, "com.ib.client.ContractDetails", false, "O", "");
      ContractDetails contractDetails0 = new ContractDetails(contract0, "&I1tRyVXgi?D5L", ",Eu#Qwb%3N.^q", (-713), "OR~,Dn", "com.ib.client.ContractDetails", (-713), "$q2kGV:c", "", "BOND", "G4Jq)7/:FcE]", ",Eu#Qwb%3N.^q", "O", "", "Connection Closed");
      String string0 = EWrapperMsgGenerator.scannerData((-713), (-713), contractDetails0, "HeX!AuRb%K", "OR~,Dn", "", ",Eu#Qwb%3N.^q");
      assertEquals("id = -713 rank=-713 symbol=G4Jq)7/:FcE] secType=G4Jq)7/:FcE] expiry=G4Jq)7/:FcE] strike=-713.0 right=,Eu#Qwb%3N.^q exchange=$q2kGV:c currency=G4Jq)7/:FcE] localSymbol= marketName=&I1tRyVXgi?D5L tradingClass=,Eu#Qwb%3N.^q distance=HeX!AuRb%K benchmark=OR~,Dn projection= legsStr=,Eu#Qwb%3N.^q", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      Contract contract0 = new Contract((-2151), "\"\"9jJ CX2eI", " startingPrice=", "id=98  unknown=d<dIN", 1.7976931348623157E308, "<`~I~$xJi", "<`~I~$xJi", "<`~I~$xJi", "bT|1G'kL*A", "id=98  unknown=d<dIN", vector0, "<`~I~$xJi", true, "<`~I~$xJi", (String) null);
      ContractDetails contractDetails0 = new ContractDetails(contract0, "<`~I~$xJi", "(}Kq#?S00njz}Q'.p", 1.7976931348623157E308, "<`~I~$xJi", "O", 0, "!p{", (String) null, "", "<`~I~$xJi", "BOND", "com.ib.client.Execution", "", "");
      String string0 = EWrapperMsgGenerator.scannerData(3470, 2554, contractDetails0, "f;I]Jt|", "com.ib.client.Order", "bT|1G'kL*A", "bT|1G'kL*A");
      assertEquals("id = 3470 rank=2554 symbol=\"\"9jJ CX2eI secType= startingPrice= expiry=id=98  unknown=d<dIN strike=1.7976931348623157E308 right=<`~I~$xJi exchange=<`~I~$xJi currency=bT|1G'kL*A localSymbol=id=98  unknown=d<dIN marketName=<`~I~$xJi tradingClass=(}Kq#?S00njz}Q'.p distance=f;I]Jt| benchmark=com.ib.client.Order projection=bT|1G'kL*A legsStr=bT|1G'kL*A", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar(0, 0, 1248.305, 0, 2280.0, 2280.0, 0, 0, (-4441));
      assertEquals("id=0 time = 0 open=1248.305 high=0.0 low=2280.0 close=2280.0 volume=0 count=-4441 WAP=0.0", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData(3171, "maturity = ", (-344.412926), (-1249.3152), 927.36082, 689.7237, 3171, 1, (-1249.3152), true);
      assertEquals("id=3171 date = maturity =  open=-344.412926 high=-1249.3152 low=927.36082 close=689.7237 volume=3171 count=1 WAP=-1249.3152 hasGaps=true", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(0, 657, "j", "com.ib.client.TagValue");
      assertEquals("MsgId=0 :: MsgType=657 :: Origin=com.ib.client.TagValue :: Message=j", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2((-1385), (-1385), ");ws", (-2372), 3471, (-2372), 1658);
      assertEquals("updateMktDepth: -1385 -1385 );ws -2372 3471 -2372.0 1658", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth((-1309), 99, 67, 102, 102, (-1));
      assertEquals("updateMktDepth: -1309 99 67 102 102.0 -1", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract((-3759), "com.ib.client.AnyWrapperMsgGenerator", "com.ib.client.UnderComp", "updateAccountValue: ,\"1b^`8$?,S*NA  =============== end =============== Next Valid Order ID: 2325 Next Valid Order ID: 2325", 2494.9281639798883, (String) null, "com.ib.client.UnderComp", (String) null, (String) null, "reqId = 0 =============== end ===============", vector0, "", true, "SCANNER PARAMETERS:\nupdateAccountValue: ,\"1b^`8$?,S*NA  =============== end =============== Next Valid Order ID: 2325 Next Valid Order ID: 2325", "com.ib.client.ContractDetails");
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, (-3759), 2325, 2494.9281639798883, (-3759), (-3759), (-2410.400270347397), " distance=");
      assertEquals("updatePortfolio: conid = -3759\nsymbol = com.ib.client.AnyWrapperMsgGenerator\nsecType = com.ib.client.UnderComp\nexpiry = updateAccountValue: ,\"1b^`8$?,S*NA  =============== end =============== Next Valid Order ID: 2325 Next Valid Order ID: 2325\nstrike = 2494.9281639798883\nright = null\nmultiplier = com.ib.client.UnderComp\nexchange = null\nprimaryExch = \ncurrency = null\nlocalSymbol = reqId = 0 =============== end ===============\n-3759 2325.0 2494.9281639798883 -3759.0 -3759.0 -2410.400270347397  distance=", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Contract contract0 = new Contract(2280, "", "com.ib.client.ContractDetails", "", 2280, "", "", "", "", " 5;Zj:IQuKP.%EAatq", (Vector) null, "", true, "", " 5;Zj:IQuKP.%EAatq");
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, (-543), 2280, 0.0, 0.0, 2280, (-4441), "<\"+}V");
      assertEquals("updatePortfolio: conid = 2280\nsymbol = \nsecType = com.ib.client.ContractDetails\nexpiry = \nstrike = 2280.0\nright = \nmultiplier = \nexchange = \nprimaryExch = \ncurrency = \nlocalSymbol =  5;Zj:IQuKP.%EAatq\n-543 2280.0 0.0 0.0 2280.0 -4441.0 <\"+}V", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(300, " algoStrategy=", 121, 300, 0, 1322, 121, 1322, 657, " algoStrategy=");
      assertEquals("order status: orderId=300 clientId=657 permId=1322 status= algoStrategy= filled=121 remaining=300 avgFillPrice=0.0 lastFillPrice=1322.0 parent Id=121 whyHeld= algoStrategy=", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus((-1), (String) null, 0, 0, 0.0, 1, 1, 0, (-11), "");
      assertEquals("order status: orderId=-1 clientId=-11 permId=1 status=null filled=0 remaining=0 avgFillPrice=0.0 lastFillPrice=0.0 parent Id=1 whyHeld=", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP(Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, "", Integer.MAX_VALUE, Integer.MAX_VALUE, "", 0.0, 0.0);
      assertEquals("id=2147483647  unknown: basisPoints = 2.147483647E9/ impliedFuture = 2.147483647E9 holdDays = 2147483647 futureExpiry =  dividendImpact = 0.0 dividends to expiry = 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP('b', 0, 1.7976931348623157E308, (String) null, 0, '?', (String) null, 0, 1.7976931348623157E308);
      assertEquals("id=98  bidSize: basisPoints = 1.7976931348623157E308/null impliedFuture = 0.0 holdDays = 63 futureExpiry = null dividendImpact = 0.0 dividends to expiry = 1.7976931348623157E308", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickString(98, (-976), "d<dIN");
      assertEquals("id=98  unknown=d<dIN", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickGeneric(0, (-11), (-1));
      assertEquals("id=0  unknown=-1.0", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1395, 102, 102, 0.0, 1429.37, (-3147.5716217493987));
      assertEquals("id=1395  unknown: vol = 102.0 delta = 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-1855), 13, 307.86, 1.7976931348623157E308, 254.0, 0.0);
      assertEquals("id=-1855  modelOptComp: vol = 307.86 delta = N/A: modelPrice = 254.0: pvDividend = 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 0, 0, 0, 1.7976931348623157E308);
      assertEquals("id=13  modelOptComp: vol = 0.0 delta = 0.0: modelPrice = 0.0: pvDividend = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSize(0, 121, 0);
      assertEquals("id=0  unknown=0", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice((-2269), 0, (-2269), 1303);
      assertEquals("id=-2269  bidSize=-2269.0  canAutoExecute", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      String string0 = EWrapperMsgGenerator.deltaNeutralValidation(0, underComp0);
      assertEquals("id = 0 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Contract contract0 = new Contract(2280, "", "com.ib.client.ContractDetails", "", 2280, "", "", "", "", " 5;Zj:IQuKP.%EAatq", (Vector) null, "", true, "", " 5;Zj:IQuKP.%EAatq");
      String string0 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 2280\nsymbol = \nsecType = com.ib.client.ContractDetails\nexpiry = \nstrike = 2280.0\nright = \nmultiplier = \nexchange = \nprimaryExch = \ncurrency = \nlocalSymbol =  5;Zj:IQuKP.%EAatq\n", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.bondContractDetails(0, contractDetails0);
      assertEquals("reqId = 0 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = null\nconid = 0\nminTick = 0.0\norderTypes = null\nvalidExchanges = null\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = null\n ---- Bond Contract Details End ----\n", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, (-1306), (-1306), (-1306), (-1306), (-1306), (-1306), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(51, "FA:", "FA:", "FA:", 51, "FA:", "FA:", "FA:", "FA:", "FA:", vector0, "FA:", false, "FA:", "FA:");
      Order order0 = new Order();
      order0.m_algoParams = contract0.m_comboLegs;
      order0.m_algoStrategy = "FA:";
      vector0.add((Object) order0.m_algoParams);
      OrderState orderState0 = new OrderState();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Vector cannot be cast to com.ib.client.TagValue
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(40, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.execDetails(346, (Contract) null, (Execution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractMsg((Contract) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(51, "FA:", "FA:", "FA:", 51, "FA:", "FA:", "FA:", "FA:", "FA:", vector0, "FA:", false, "FA:", "FA:");
      Order order0 = new Order();
      order0.m_algoParams = contract0.m_comboLegs;
      order0.m_algoStrategy = "FA:";
      TagValue tagValue0 = new TagValue((String) null, (String) null);
      vector0.add((Object) tagValue0);
      OrderState orderState0 = new OrderState();
      vector0.add((Object) tagValue0);
      String string0 = EWrapperMsgGenerator.openOrder(2930, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(51, "FA:", "FA:", "FA:", 51, "FA:", "FA:", "FA:", "FA:", "FA:", vector0, "FA:", false, "FA:", "FA:");
      Order order0 = new Order();
      order0.m_algoStrategy = "FA:";
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(2930, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Contract contract0 = new Contract();
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(254, "id=254  unknown=2257", "BAG", "id=254  unknown=2257", (-139.7490903721396), "BAG", "BAG", "wB0+n", "BAG", "category = ", vector0, "BAG", false, "BAG", "markPrice");
      Order order0 = new Order();
      order0.m_basisPoints = (-139.7490903721396);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(1352, contract0, order0, (OrderState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>(1340);
      Contract contract0 = new Contract(254, "id=254  unknown=2257", "BAG", "id=254  unknown=2257", (-139.7490903721396), "BAG", "BAG", "auBtionImbalRnge", "BAG", "BAG", vector0, "BAG", true, "BAG", "BAG");
      contract0.m_comboLegsDescrip = "id=254  unknown=2257";
      Order order0 = new Order();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(1340, contract0, order0, (OrderState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-1), 13, 13, 13, (-1), (-1));
      assertEquals("id=-1  modelOptComp: vol = 13.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 13, 1.7976931348623157E308, 13);
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = 13.0", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-1), (-1), (-1), (-1), (-1), (-1));
      assertEquals("id=-1  unknown: vol = N/A delta = -1.0", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice((-1662), (-1662), (-1662), (-1662));
      assertEquals("id=-1662  unknown=-1662.0  canAutoExecute", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice(Integer.MAX_VALUE, Integer.MAX_VALUE, (-803.13017994), 0);
      assertEquals("id=2147483647  unknown=-803.13017994  noAutoExecute", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation(13, (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.fundamentalData(0, "jT#M^N\"<r");
      assertEquals("id  = 0 len = 9\njT#M^N\"<r", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.contractDetails(0, contractDetails0);
      assertEquals("reqId = 0 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = null\ntimeZoneId = null\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue("SCANNER PARAMETERS:", "7K0+OaW1LDy }", "com.ib.client.TagValue", (String) null);
      assertEquals("updateAccountValue: SCANNER PARAMETERS: 7K0+OaW1LDy } com.ib.client.TagValue null", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.receiveFA(0, (String) null);
      assertEquals("FA: null null", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.contractDetailsEnd(2146595372);
      assertEquals("reqId = 2146595372 =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSnapshotEnd(2861);
      assertEquals("id=2861 =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerDataEnd(13);
      assertEquals("id = 13 =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.managedAccounts(" =============== end ===============");
      assertEquals("Connected : The list of managed accounts are : [ =============== end ===============]", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      assertEquals("Connection Closed", eWrapperMsgGenerator0.connectionClosed());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractDetails(11, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.accountDownloadEnd("m<~FzXw:_o");
      assertEquals("accountDownloadEnd: m<~FzXw:_o", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(0, 1, "id=0  unknown: basisPoints = 0.0/null impliedFuture = -1.0 holdDays = 0 futureExpiry =  dividendImpact = -726.845033 dividends to expiry = 0.0", 0, 0, 0, 0);
      assertEquals("updateMktDepth: 0 1 id=0  unknown: basisPoints = 0.0/null impliedFuture = -1.0 holdDays = 0 futureExpiry =  dividendImpact = -726.845033 dividends to expiry = 0.0 0 0 0.0 0", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails((-759), (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.scannerData((-490), (-490), (ContractDetails) null, " =============== end ===============", " =============== end ===============", " =============== end ===============", " =============== end ===============");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar(0, 1, 0.0, 0, 1, (-3232.917479644), 0, (-1.0), (-1));
      assertEquals("id=0 time = 1 open=0.0 high=0.0 low=1.0 close=-3232.917479644 volume=0 count=-1 WAP=-1.0", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.nextValidId(13);
      assertEquals("Next Valid Order ID: 13", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.execDetailsEnd(90);
      assertEquals("reqId = 90 =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.currentTime(266L);
      assertEquals("current time = 266 (Jan 1, 1970 12:04:26 AM)", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.openOrderEnd();
      assertEquals(" =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP(0, (-862), 0.0, (String) null, (-1.0), 0, "", (-726.845033), 0.0);
      assertEquals("id=0  unknown: basisPoints = 0.0/null impliedFuture = -1.0 holdDays = 0 futureExpiry =  dividendImpact = -726.845033 dividends to expiry = 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Contract contract0 = new Contract();
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.execDetails(0, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 0\norderId = 0\nclientId = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\ncontractExchange = null\ncurrency = null\nlocalSymbol = null\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSize(254, 254, 2257);
      assertEquals("id=254  unknown=2257", string0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerParameters(" =============== end ===============");
      assertEquals("SCANNER PARAMETERS:\n =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData(Integer.MAX_VALUE, (String) null, 1, Integer.MAX_VALUE, 0, 0, 0, 0, 0, false);
      assertEquals("id=2147483647 date = null open=1.0 high=2.147483647E9 low=0.0 close=0.0 volume=0 count=0 WAP=0.0 hasGaps=false", string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountTime("");
      assertEquals("updateAccountTime: ", string0);
  }
}
